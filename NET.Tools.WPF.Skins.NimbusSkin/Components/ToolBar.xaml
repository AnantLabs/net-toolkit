<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="NET.Tools.WPF.Skins.ToolBarCode" x:ClassModifier="internal">
    
    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="#D6D9DF"/>
    </Style>
    
    <!--****************************************************************************-->

    <ControlTemplate x:Key="ToolBarThumb" TargetType="{x:Type Thumb}">
        <Border BorderThickness="1,1,0,1" CornerRadius="2,0,0,2" BorderBrush="#9DA2AB">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#F6F7F8" Offset="0"/>
                    <GradientStop Color="#D6D9DF" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
    </ControlTemplate>
    
    <Style x:Key="ToolBarButton" TargetType="{x:Type ButtonBase}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Name="Selector" Background="Transparent" BorderThickness="0">
                            <Border.Effect>
                                <BlurEffect/>
                            </Border.Effect>
                        </Border>
                        <Border Name="HighLighted" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" CornerRadius="3"/>
                        <Border Name="Checker" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" CornerRadius="3"/>
                        <Border Name="Button" Background="Transparent" BorderThickness="0">
                            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Checker" Property="Background" Value="#BEC1C7"/>
                            <Setter TargetName="Checker" Property="BorderBrush" Value="#9DA2AB"/>
                        </Trigger>
                        <Trigger Property="CheckBox.IsChecked" Value="true">
                            <Setter TargetName="Checker" Property="Background" Value="#BEC1C7"/>
                            <Setter TargetName="Checker" Property="BorderBrush" Value="#9DA2AB"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="CheckBox.IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Checker" Property="Background" Value="#AEB1B7"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Selector"
                                            Storyboard.TargetProperty="Background.Color"
                                            AutoReverse="False"
                                            Duration="0:0:0.5"
                                            To="#73A4D1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Selector"
                                            Storyboard.TargetProperty="Background.Color"
                                            AutoReverse="False"
                                            Duration="0:0:0.5"
                                            To="Transparent"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">                            
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="HighLighted"
                                            Storyboard.TargetProperty="Background.Color"
                                            AutoReverse="False"
                                            Duration="0:0:0.1"
                                            To="#F6F7F8"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="HighLighted"
                                            Storyboard.TargetProperty="Background.Color"
                                            AutoReverse="False"
                                            Duration="0:0:0.1"
                                            To="Transparent"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--****************************************************************************-->
    
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type Button}"/>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type ToggleButton}"/>
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type CheckBox}"/>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" BasedOn="{StaticResource ToolBarButton}" TargetType="{x:Type RadioButton}"/>
    
    <!--****************************************************************************-->

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border Background="Transparent" BorderThickness="0">
                        <DockPanel>
                            <Border DockPanel.Dock="Right" BorderThickness="1" BorderBrush="#9DA2AB" Background="Transparent">
                                <Grid>
                                    <ToggleButton HorizontalAlignment="Right" Width="12" ClickMode="Press" IsEnabled="{TemplateBinding HasOverflowItems}"
                                                  IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid>
                                            <Path Data="M 0 0 L 6 3 L 0 6 L 0 0" Fill="#1E1E1F"/>
                                            <Popup Placement="Bottom" IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}" 
                                                   StaysOpen="False" Focusable="False" PopupAnimation="Slide" MinWidth="200" MinHeight="100">
                                                <Border BorderThickness="1" BorderBrush="#9DA2AB">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Color="#F6F7F8" Offset="0"/>
                                                            <GradientStop Color="#DDE0E5" Offset=".5"/>
                                                            <GradientStop Color="#D6D9DF" Offset=".75"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel"  Margin="2" WrapWidth="200" Focusable="True" 
                                                                  FocusVisualStyle="{x:Null}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                                </Border>
                                            </Popup>
                                        </Grid>
                                    </ToggleButton>
                                    <ToolBarPanel Margin="0,0,12,0" IsItemsHost="True" Background="Transparent"/>
                                </Grid>
                            </Border>                            
                            <Thumb Cursor="ScrollAll" DragDelta="Move_DragDelta" Name="Thumb" Width="10" Template="{StaticResource ToolBarThumb}"/>                            
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="Thumb" Property="IsEnabled" Value="false"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>